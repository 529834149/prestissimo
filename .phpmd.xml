<?xml version="1.0"?>
<ruleset name="Prestissimo Original Rules"
         xmlns="http://pmd.sf.net/ruleset/1.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd"
         xsi:noNamespaceSchemaLocation="http://pmd.sf.net/ruleset_xml_schema.xsd">

    <rule name="CyclomaticComplexity"
          message = "The {0} {1}() has a Cyclomatic Complexity of {2}. The configured cyclomatic complexity threshold is {3}."
          class="PHPMD\Rule\CyclomaticComplexity"
          externalInfoUrl="http://phpmd.org/rules/codesize.html#cyclomaticcomplexity">
        <priority>3</priority>
        <properties>
            <property name="reportLevel" value="10"/>
            <property name="showClassesComplexity" value="true"/>
            <property name="showMethodsComplexity" value="true"/>
        </properties>
    </rule>


    <rule name="NPathComplexity"
          message="The {0} {1}() has an NPath complexity of {2}. The configured NPath complexity threshold is {3}."
          class="PHPMD\Rule\Design\NpathComplexity"
          externalInfoUrl="http://phpmd.org/rules/codesize.html#npathcomplexity">
        <priority>3</priority>
        <properties>
            <property name="minimum" value="200"/>
        </properties>
    </rule>


    <rule name="ExcessiveMethodLength"
          message="The {0} {1}() has {2} lines of code. Current threshold is set to {3}. Avoid really long methods."
          class="PHPMD\Rule\Design\LongMethod"
          externalInfoUrl="http://phpmd.org/rules/codesize.html#excessivemethodlength">
        <priority>3</priority>
        <properties>
            <property name="minimum" value="100"/>
            <property name="ignore-whitespace" value="false"/>
        </properties>
    </rule>

    <rule name="ExcessiveClassLength"
          message="The class {0} has {1} lines of code. Current threshold is {2}. Avoid really long classes."
          class="PHPMD\Rule\Design\LongClass"
          externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasslength">
        <priority>3</priority>
        <properties>
            <property name="minimum" value="1000"/>
            <property name="ignore-whitespace" value="false"/>
        </properties>
    </rule>


    <rule name="ExcessiveParameterList"
          message="The {0} {1} has {2} parameters. Consider to reduce parameter number under {3}."
          class="PHPMD\Rule\Design\LongParameterList"
          externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveparameterlist">
        <priority>3</priority>
        <properties>
            <property name="minimum" value="10"/>
        </properties>
    </rule>

    <rule name="ExcessivePublicCount"
          message="The {0} {1} has {2} public methods and attributes. Consider to reduce the number of public items under {3}."
          class="PHPMD\Rule\ExcessivePublicCount"
          externalInfoUrl="http://phpmd.org/rules/codesize.html#excessivepubliccount">
        <priority>3</priority>
        <properties>
            <property name="minimum" value="45"/>
        </properties>
    </rule>

    <rule name="TooManyFields"
          message="The {0} {1} has {2} fields. Consider to redesign {1} to keep the number of fields under {3}."
          class="PHPMD\Rule\Design\TooManyFields"
          externalInfoUrl="http://phpmd.org/rules/codesize.html#toomanyfields">
        <priority>3</priority>
        <properties>
            <property name="maxfields" value="15"/>
        </properties>
    </rule>

    <rule name="TooManyMethods"
          class="PHPMD\Rule\Design\TooManyMethods"
          message="The {0} {1} has {2} none getter- and setter-methods. Consider refactoring {1} to keep number of methods under {3}."
          externalInfoUrl="http://phpmd.org/rules/codesize.html#toomanymethods">
        <priority>3</priority>
        <properties>
            <property name="maxmethods" value="25"/>
            <property name="ignorepattern" value="(^(set|get))i"/>
        </properties>
    </rule>

    <rule name="TooManyPublicMethods"
          class="PHPMD\Rule\Design\TooManyPublicMethods"
          message="The {0} {1} has {2} public methods. Consider refactoring {1} to keep number of public methods under {3}."
          externalInfoUrl="http://phpmd.org/rules/codesize.html#toomanypublicmethods">
        <priority>3</priority>
        <properties>
            <property name="maxmethods" value="10"/>
            <property name="ignorepattern" value="(^(set|get))i"/>
        </properties>
    </rule>

    <rule name="ExcessiveClassComplexity"
          class="PHPMD\Rule\Design\WeightedMethodCount"
          message="The class {0} has an overall complexity of {1} which is very high. The configured complexity threshold is {2}."
          externalInfoUrl="http://phpmd.org/rules/codesize.html#excessiveclasscomplexity">
        <priority>3</priority>
        <properties>
            <property name="maximum" value="50"/>
        </properties>
    </rule>

    <rule name="CamelCaseClassName"
          message = "The class {0} is not named in CamelCase."
          class="PHPMD\Rule\Controversial\CamelCaseClassName"
          externalInfoUrl="#">
        <priority>1</priority>
        <properties />
    </rule>

    <rule name="CamelCasePropertyName"
          message = "The property {0} is not named in camelCase."
          class="PHPMD\Rule\Controversial\CamelCasePropertyName"
          externalInfoUrl="#">
        <priority>1</priority>
        <properties>
            <property name="allow-underscore" value="true" />
            <property name="allow-underscore-test" value="false" />
        </properties>
    </rule>

    <rule name="CamelCaseMethodName"
          message = "The method {0} is not named in camelCase."
          class="PHPMD\Rule\Controversial\CamelCaseMethodName"
          externalInfoUrl="#">
        <priority>1</priority>
        <properties>
            <property name="allow-underscore" value="false" />
            <property name="allow-underscore-test" value="false" />
        </properties>
    </rule>

    <rule name="CamelCaseParameterName"
          message = "The parameter {0} is not named in camelCase."
          class="PHPMD\Rule\Controversial\CamelCaseParameterName"
          externalInfoUrl="#">
        <priority>1</priority>
        <properties />
    </rule>

    <rule name="CamelCaseVariableName"
          message = "The variable {0} is not named in camelCase."
          class="PHPMD\Rule\Controversial\CamelCaseVariableName"
          externalInfoUrl="#">
        <priority>1</priority>
        <properties />
    </rule>

    <rule name="NumberOfChildren"
          message = "The {0} {1} has {2} children. Consider to rebalance this class hierarchy to keep number of children under {3}."
          class="PHPMD\Rule\Design\NumberOfChildren"
          externalInfoUrl="http://phpmd.org/rules/design.html#numberofchildren">
        <priority>2</priority>
        <properties>
            <property name="minimum" value="15"/>
        </properties>
    </rule>

    <rule name="DepthOfInheritance"
          message = "The {0} {1} has {2} parents. Consider to reduce the depth of this class hierarchy to under {3}."
          class="PHPMD\Rule\Design\DepthOfInheritance"
          externalInfoUrl="http://phpmd.org/rules/design.html#depthofinheritance">
        <priority>2</priority>
        <properties>
            <property name="minimum" value="6"/>
        </properties>
    </rule>

    <rule name="CouplingBetweenObjects"
          message="The class {0} has a coupling between objects value of {1}. Consider to reduce the number of dependencies under {2}."
          class="PHPMD\Rule\Design\CouplingBetweenObjects"
          externalInfoUrl="http://phpmd.org/rules/design.html#couplingbetweenobjects">
        <priority>2</priority>
        <properties>
            <property name="minimum" value="13"/>
        </properties>
    </rule>

    <rule name="DevelopmentCodeFragment"
          message="The {0} {1}() calls the typical debug function {2}() which is mostly only used during development."
          class="PHPMD\Rule\Design\DevelopmentCodeFragment"
          externalInfoUrl="http://phpmd.org/rules/design.html#developmentcodefragment">
        <priority>2</priority>
        <properties>
            <property name="unwanted-functions" value="var_dump,print_r,debug_zval_dump,debug_print_backtrace"/>
        </properties>
    </rule>

    <rule name="LongVariable"
          message="Avoid excessively long variable names like {0}. Keep variable name length under {1}."
          class="PHPMD\Rule\Naming\LongVariable"
          externalInfoUrl="http://phpmd.org/rules/naming.html#longvariable">
        <priority>3</priority>
        <properties>
            <property name="maximum" value="20"/>
        </properties>
    </rule>

    <rule name="ShortMethodName"
          message="Avoid using short method names like {0}::{1}(). The configured minimum method name length is {2}."
          class="PHPMD\Rule\Naming\ShortMethodName"
          externalInfoUrl="http://phpmd.org/rules/naming.html#shortmethodname">
        <priority>3</priority>
        <properties>
            <property name="minimum" value="3"/>
            <property name="exceptions" value=""/>
        </properties>
    </rule>

    <rule name="ConstructorWithNameAsEnclosingClass"
          message="Classes should not have a constructor method with the same name as the class"
          class="PHPMD\Rule\Naming\ConstructorWithNameAsEnclosingClass"
          externalInfoUrl="http://phpmd.org/rules/naming.html#constructorwithnameasenclosingclass">
        <priority>3</priority>
    </rule>

    <rule name="ConstantNamingConventions"
          message="Constant {0} should be defined in uppercase"
          class="PHPMD\Rule\Naming\ConstantNamingConventions"
          externalInfoUrl="http://phpmd.org/rules/naming.html#constantnamingconventions">
        <priority>4</priority>
        <properties />
    </rule>

    <rule name="BooleanGetMethodName"
          message="The '{0}()' method which returns a boolean should be named 'is...()' or 'has...()'"
          class="PHPMD\Rule\Naming\BooleanGetMethodName"
          externalInfoUrl="http://phpmd.org/rules/naming.html#booleangetmethodname">
        <priority>4</priority>
        <properties>
            <property name="checkParameterizedMethods" value="false"/>
        </properties>
    </rule>

    <rule name="UnusedPrivateField"
          message="Avoid unused private fields such as '{0}'."
          class="PHPMD\Rule\UnusedPrivateField"
          externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedprivatefield">
        <priority>3</priority>
    </rule>

    <rule name="UnusedLocalVariable"
          message="Avoid unused local variables such as '{0}'."
          class="PHPMD\Rule\UnusedLocalVariable"
          externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedlocalvariable">
        <priority>3</priority>
        <properties>
            <property name="allow-unused-foreach-variables" value="false"/>
        </properties>
    </rule>

    <rule name="UnusedPrivateMethod"
          message="Avoid unused private methods such as '{0}'."
          class="PHPMD\Rule\UnusedPrivateMethod"
          externalInfoUrl="http://phpmd.org/rules/unusedcode.html#unusedprivatemethod">
        <priority>3</priority>
    </rule>
</ruleset>
